@{
    ViewData["Title"] = "Home Page";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

<!-- Client side libs required  -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.1.1/min/dropzone.min.css" crossorigin="anonymous">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/blueimp-gallery/2.25.2/css/blueimp-gallery.min.css" crossorigin="anonymous">

<title>Sonali & Deepanshu's Wedding</title>
<style>

    .image-container {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        gap: 10px;
    }
    
    .image-item {
        width: 100%;
        height: auto;
    }

    .logo {
        display: flex;
        justify-content: center;
    }
    .logo img {
        max-width: 150px; /* Adjusted logo size for smaller screens */
    }

    header {
        padding: 20px;
    }

    html {
        font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
    }

    #gallery-note {
        font-size: smaller
    }

    .blueimp-gallery {
        margin: 25px;
        height: 300px;
        max-width: 100%;
        padding-bottom: 150px;
    }

    .dropzone {
        border: 3px dashed #00a1f1;
        background: #F0F8FF;
        margin: 25px;
        border-radius: 5px;
        max-width: 400px;
    }

    .dropzone .dz-message {
        font-weight: 350;
    }

    .dropzone .dz-message .note {
        font-family: sans-serif;
        font-size: 18px;
        font-weight: 200;
        display: block;
        margin-top 1.5rem;
    }

    body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            color: #ffd700; /* Darker shade of gold */
            background: linear-gradient(135deg, #000000, #1d1d1d, #333333);
    }

    .logo img {
        max-width: 200px; /* Increased logo size */
    }

    nav ul {
        list-style-type: none;
        margin: 0;
        padding: 0;
    }

    nav ul li {
        display: inline;
        margin-right: 20px;
    }

    nav ul li a {
        color: #b8860b; /* Darker shade of gold */
        text-decoration: none;
        font-weight: bold;
        transition: color 0.3s;
    }

    nav ul li a:hover {
        color: #ffd700; /* Lighter shade of gold */
    }

    main {
        margin: 20px;
        text-align: center;
    }

    .hero {
        margin-top: 30px;
        text-align: center;
        background-color: rgba(184, 134, 11, 0.5); /* Semi-transparent gold */
        padding: 20px 20px;
        border-radius: 10px;
    }

    .hero h1 {
        font-size: 1em;
        color: #ffd700; /* Darker shade of gold */
        margin-bottom: 10px;
        width: 100%;
        max-width: 100%;
    }

    .hero p {
        font-size: 0.75em;
        color: #b8860b; /* Lighter shade of gold */
    }

    .upload-form {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-wrap: wrap;
    }

    .upload-form input[type="file"] {
        display: none;
    }

    .upload-form label {
        background-color: #b8860b; /* Darker shade of gold */
        color: black;
        padding: 15px 30px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.3s;
        margin: 0 15px 15px 0;
        font-size: 1.2em;
    }

    .upload-form label:hover {
        background-color: #ffd700; /* Lighter shade of gold */
        color: black;
    }

    footer {
        text-align: center;
        background: linear-gradient(45deg, #1c1c1c, #333333);
        color: #b8860b; /* Darker shade of gold */
        padding: 20px;
        border-top: 2px solid #b8860b; /* Darker shade of gold */
    }

</style>
</head>
 <header>
        <div class="logo">
            <img src="https://dkhannaweddingcontentsa.blob.core.windows.net/thumbnails/DSLogo.png?sp=r&st=2024-03-23T19:12:44Z&se=2024-12-31T03:12:44Z&spr=https&sv=2022-11-02&sr=c&sig=yLyAQz3nqAOSbgdWgTXk4ywibwtVJEtXiycFTXkovac%3D" alt="Sonali & Deepanshu's Wedding Logo">
        </div>
</header>
<main>
    <div class="hero">
        <div style="font-family: 'Your Calligraphic Font', cursive; text-align: center;">
            <div style="margin-top: 50px; font-size: 2em;">
                Welcome<br>to<br>Sonali and Deepanshu's Engagement
            </div>
        </div>
        <p>Your presence at our engagement meant the world to us! 
            <br>Thank you for being there to celebrate our love and new beginning.</p>
    </div>

  <div class="box content">
     <h2>Share Your Moments</h2>
        <div class = "upload-images"> 
            <form action="/api/images/upload"
                 class="dropzone needsclick dz-clickable" 
                 id="image-upload"
                 method="post"
                 enctype="multipart/form">

                <div class="dz-message needsclick">
                    <span class="note needsclick">
                        Drop files here or click to upload.
                    </span>
                </div>
            </form>
        </div>

            <div id="stored-images"></div>

            <!-- The Gallery as inline carousel, can be positioned anywhere on the page -->
            <div id="blueimp-gallery-carousel" class="blueimp-gallery blueimp-gallery-carousel">
                <div class="slides"></div>
                <h3 class="title"></h3>
                <a class="prev">‹</a>
                <a class="next">›</a>
                <a class="play-pause"></a>
                <ol class="indicator"></ol>
            </div>
    </div>
</main>

<footer>
    <p>&copy; 2024 Sonali & Deepanshu's Wedding</p>
</footer>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/dropzone/5.1.1/min/dropzone.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/blueimp-gallery/2.25.2/js/blueimp-gallery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script>

<script>   
// init gallery for later use
    var gallery;

    // Grab links for images from backend api
    function fetchImageLinks() {
        // Fetch images
        $.get("api/images/list", function(fetchedImageLinks) {
            console.log(fetchedImageLinks)

            // Check if anything is in there
            if ( _.isEmpty(fetchedImageLinks) ){
                console.log('empty fetched')
                // do nothing  
            } else {
                // Check if we have a gallery initialized
                if ( _.isEmpty(gallery) ) {
                    // initialize gallery
                    gallery = blueimp.Gallery(
                                fetchedImageLinks, // gallery links array
                                {
                                    container: '#blueimp-gallery-carousel',
                                    carousel: true
                                } // gallery options
                            );                    
                } else {
                    // check if images are equal to array
                    console.log('currently in gallery:')
                    console.log(gallery.list)
                    var imageLinksEqual = _.isEqual(_.sortBy(gallery.list.map(s => s.split("?")[0])), _.sortBy(fetchedImageLinks.map(s => s.split("?")[0])))
                    if ( imageLinksEqual ) {
                        console.log('images arr are equal')
                        // do nothing
                    } else {
                        console.log('images arr are not equal')

                        // update gallery with new image urls. Only compare actual url without SAS token query string
                        var newImageLinks = _.difference(fetchedImageLinks.map(s => s.split("?")[0]), gallery.list.map(s => s.split("?")[0]))

                        console.log('differene is: ')
                        console.log(newImageLinks)
                        // Only add new images
                        gallery.add(newImageLinks);

                        // Force image load
                        gallery.next();
                    }
                }       
            }     
        });
    }

    // Start first interval
    fetchImageLinks()
    
    setInterval(function() {
        fetchImageLinks()
    }, 6000000) 

    /* Dropzone */
    // "imageUpload" is the camelized version of the HTML element's ID
    Dropzone.options.imageUpload = {
        paramName: "files", // The name that will be used to transfer the file
        dictDefaultMessage: "Drop files here or Click to Upload",
        addRemoveLinks: true, // Allows for cancellation of file upload and remove thumbnail
        init: function() {
            myDropzone = this;
            myDropzone.on("success", function(file, response) {
                console.log("Success");
                myDropzone.removeFile(file);
            });                    
        }
    };

/*
// Function to fetch images from Azure container and display them
async function fetchAndDisplayImages() {
    const storageAccountName = 'dkhannaweddingcontentsa';
    const containerUrl = 'https://dkhannaweddingcontentsa.blob.core.windows.net/images'; // Replace this with your Azure container URL
    const sasToken = 'sp=r&st=2024-03-23T18:53:38Z&se=2025-03-24T02:53:38Z&sv=2022-11-02&sr=c&sig=emv%2Bc3xmjw8FlmQ6oTHRYx7tFDp%2BR%2Btzj6wz8TJA0Q0%3D'; // Replace this with your SAS token

    const containerUrlWithSas = `${containerUrl}?${sasToken}`;

    try {
        const response = await fetch(containerUrlWithSas, {
            method: 'GET',
            headers: {
                'Authorization': `SharedKey ${storageAccountName}:${sasToken}`,
                'x-ms-version': '2023-11-03',
                'x-ms-date': new Date().toUTCString()
            }
        });

        if (!response.ok) {
            throw new Error(`Failed to fetch images: ${response.status} ${response.statusText}`);
            console.log(response.statusText)
        }
        const data = await response.json();

        const imageContainer = document.getElementById('imageContainer');

        // Loop through each image in the container and create an <img> element
        data.forEach(image => {
            const imgElement = document.createElement('img');
            imgElement.src = `${containerUrl}/${image}`;
            imgElement.alt = image;
            imgElement.classList.add('image-item');
            imageContainer.appendChild(imgElement);
        });
    } catch (error) {
        console.error('Error fetching images:', error);
        // Handle the error, e.g., display an error message on the website
    }
}

    // Start first interval
    fetchAndDisplayImages()
    
    setInterval(function() {
        fetchAndDisplayImages()
    }, 5000)
*/

</script>
